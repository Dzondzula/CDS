# rule identifiers to exclude from running
disabled_rules:
  #- trailing_whitespace
  - todo
  - mark
  - vertical_whitespace
  #- syntactic_sugar
  #- unused_closure_parameter
  #- closure_parameter_position
  - redundant_string_enum_value
  - large_tuple
  #- shorthand_operator
  #- vertical_parameter_alignment
  - identifier_name
  - inclusive_language # Disabled until MasterTabBarController refactoring complete
  - cyclomatic_complexity
  - discouraged_object_literal
  - explicit_acl
  - explicit_enum_raw_value # Rationale: Heavy handed in telling someone how to code
  - void_return
  - trailing_whitespace
  - switch_case_alignment



# some rules are only opt-in
opt_in_rules:
  #- force_unwrapping
  - private_action
  - explicit_init
  - collection_alignment
  - number_separator
  - attributes
  - closure_spacing
  - contains_over_filter_count
  - contains_over_filter_is_empty
  - contains_over_first_not_nil
  - contains_over_range_nil_comparison # A more clear and consise way to check if a range exists
  - control_statement #if, for, guard, switch, while, and catch statements shouldnâ€™t unnecessarily wrap their conditionals or arguments in parentheses
  - discarded_notification_center_observer #Encourages proper memory practices
  - discouraged_optional_boolean #A nil bool is a tri-state variable which can be modeled more clearly
  - empty_collection_literal
  - empty_count
  - fatal_error_message
  - first_where
  - implicitly_unwrapped_optional
  - joined_default_parameter
  - last_where
  - multiline_parameters
  - notification_center_detachment
  - operator_usage_whitespace
  - overridden_super_call
  - override_in_extension
  - prohibited_super_call
  - redundant_nil_coalescing
  - single_test_class
  - sorted_first_last
  - vertical_parameter_alignment_on_call
  - vertical_whitespace_closing_braces
  - weak_delegate
  - unused_capture_list
  - legacy_multiple


analyzer_rules: # Rules run by `swiftlint analyze`
  - explicit_self

# paths to include during linting. `--path` is ignored if present.
included:
  - ${PWD}
  
excluded:
  - Carthage
  - Pods
  - ${PWD}/Pods
  - ${PWD}/LoginTests
  - MyFirebase/LoginTests
  - Source/ExcludedFolder
  - Source/ExcludedFile.swift
  - Source/*/ExcludedFile.swift# paths to ignore during linting. Takes precedence over `included`.
   # Exclude files with a wildcard

# If true, SwiftLint will not fail if no lintable files are found.
allow_zero_lintable_files: false

# configurable rules can be customized from this configuration file
# binary rules can set their severity level
shorthand_operator: warning
force_cast: warning # implicitly
force_try:
  severity: warning # explicitly
# rules that have both warning and error levels, can set just the warning level
# implicitly
line_length: 1250
# they can set both implicitly with an array
type_body_length:
  - 300 # warning
  - 400 # error
# or they can set both explicitly
file_length:
  warning: 500
  error: 1200
number_separator:
  min_lenght: 5
  max_length: 10
# naming rules can set warnings/errors for min_length and max_length
# additionally they can set excluded names
type_name:
  min_length: 4 # only warning
  max_length: # warning and error
    warning: 40
    error: 50
  excluded: iPhone # excluded via string
  allowed_symbols: ["_"] # these are allowed in type names

identifier_name:
  min_length: # only min_length
    error: 4 # only error
  excluded: # excluded via string array
    - id
    - URL
    - GlobalAPIKey
reporter: "xcode" # reporter type (xcode, json, csv, checkstyle, codeclimate, junit, html, emoji, sonarqube, markdown, github-actions-logging)
